		  
#Область о // Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНачальнымиДанными(Параметры); 
	ОбновитьДиалогиКЗадаче();     
	УстановкаРеквизитовНаФорме();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	                        
	Отправить(Неопределено);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьФорму(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ДиалогиКЗадачеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	htmlElement = НайтиСсылкуОбъекта(ДанныеСобытия.Element);
    // Анализируем если произошло нажание не ссылку
    Если htmlElement <> Неопределено Тогда
		
        Если СокрЛП(htmlElement.id) <> "" Тогда
			
			Если СтрНайти(htmlElement.id,"image") > 0 Тогда
				
				ОткрытьКартинкуНаКлиенте(htmlElement.id);
				
			Иначе
				
				ОбработатьДействиеПоСсылкеНаКлиенте(htmlElement.id);	
				
			КонецЕсли;
			
		ИначеЕсли htmlElement.href <> "" Тогда	

			Попытка
				ПерейтиПоНавигационнойСсылке(htmlElement.href);	
			Исключение
				Сообщить("Ошибка перехода по внешней ссылке: "
				        +htmlElement.href
						+". Описание ошибки: "
						+ ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;	  
		
	КонецЕсли;	  			
	
КонецПроцедуры  

&НаКлиенте
Процедура ОбработатьДействиеПоСсылкеНаКлиенте(СсылкаСтрока)
	
	Если СтрНайти(СсылкаСтрока,"[Удалить]") > 0 Тогда
		ЗадатьВопросОбУдаленииСтроки(СсылкаСтрока);	
	Иначе
		ОбработатьДействиеПоСсылкеНаСервере(СсылкаСтрока);	
	КонецЕсли;	
	
КонецПроцедуры  

&НаКлиенте
Процедура ЗадатьВопросОбУдаленииСтроки(СсылкаСтрока)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СсылкаСтрока",СсылкаСтрока);
	
	Оповещение = Новый ОписаниеОповещения("ЗадатьВопросОбУдаленииСтрокиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ТекстСообщения = НСтр("ru='Удалить строку комментария?'");
	ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьВопросОбУдаленииСтрокиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
    	ОбработатьДействиеПоСсылкеНаСервере(ДополнительныеПараметры.СсылкаСтрока);    
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьДействиеПоСсылкеНаСервере(СсылкаСтрока)
	
	Действие = "";     
	Если СтрНайти(СсылкаСтрока,"[Удалить]") > 0 Тогда
		мИДТекущегоСообщения = СтрЗаменить(СсылкаСтрока,"[Удалить]","");
		УдалитьСообщение(мИДТекущегоСообщения);      
	ИначеЕсли СтрНайти(СсылкаСтрока,"[Редактировать]") > 0 Тогда
		
		мИДТекущегоСообщения = СтрЗаменить(СсылкаСтрока,"[Редактировать]","");
		
		ПоискСтруктура = Новый Структура("ИДСообщения",мИДТекущегоСообщения);
		
		ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
		ДиалогиКЗадачеМассив = ЗадачаОбъект.ДиалогиКЗадачеТаблица.НайтиСтроки(ПоискСтруктура);
		
		Для каждого ДиалогСтрока Из ДиалогиКЗадачеМассив Цикл
			мКомментарийКЗадаче = ДиалогСтрока.СообщениеДиалога.Получить(); 	
		КонецЦикла;
		
	ИначеЕсли СтрНайти(СсылкаСтрока,"[Комментировать]") > 0 Тогда
		
		ИДСообщенияСтрока = СтрЗаменить(СсылкаСтрока,"[Комментировать]","");
		
		ПоискСтруктура = Новый Структура("ИДСообщения",ИДСообщенияСтрока);
		
		ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
		ДиалогиКЗадачеМассив = ЗадачаОбъект.ДиалогиКЗадачеТаблица.НайтиСтроки(ПоискСтруктура);
		
		Для каждого ДиалогСтрока Из ДиалогиКЗадачеМассив Цикл
			
			СообщениеФорматированныйДокумент = ДиалогСтрока.СообщениеДиалога.Получить();
			
			ДобавитьКомментарииНачалаИКонцаВСообщение(ДиалогСтрока,СообщениеФорматированныйДокумент);
			СоединитьФорматированныеДокументы(СообщениеФорматированныйДокумент, мКомментарийКЗадаче);	
			
		КонецЦикла;                           

	КонецЕсли;      
	
	ЭтаФорма.ТекущийЭлемент = Элементы.мКомментарийКЗадаче;  
	ЭтаФорма.Записать();
	
КонецПроцедуры    

&НаСервере
Процедура ДобавитьКомментарииНачалаИКонцаВСообщение(ДиалогСтрока,ФорматированныйДокумент)

	КомментарийНачало = "[*]"
						 + ДиалогСтрока.Автор + " " 
						 + " ["
						 + ДиалогСтрока.Дата
						 + " ]:"
						 + Символы.ПС;

	КомментарийКонец = "[/*]"
					 + Символы.ПС
					 + Символы.ПС
					 ; 
					 
	ПозицияНачала = ФорматированныйДокумент.ПолучитьЗакладкуПоПозиции(0);				 
	ФорматированныйДокумент.Вставить(ПозицияНачала, КомментарийНачало, Тип("ТекстФорматированногоДокумента"));				 
	ФорматированныйДокумент.Добавить(КомментарийКонец, Тип("ТекстФорматированногоДокумента"));				 
					 
КонецПроцедуры

&НаСервере
Процедура СоединитьФорматированныеДокументы(ИсходныйДокумент, ДокументПолучатель) Экспорт
	
	ТекМаркСписок = Неопределено;
    ТекНумСписок = Неопределено;
    
    Для Каждого Параграф Из ИсходныйДокумент.Элементы Цикл
        
        ЭтоМаркСписок = Параграф.ТипПараграфа=ТипПараграфа.МаркированныйСписок;
        ЭтоНумСписок = Параграф.ТипПараграфа=ТипПараграфа.НумерованныйСписок;
        ЭтоОбычныйСписок = Параграф.ТипПараграфа=ТипПараграфа.Обычный;

        Если ЭтоМаркСписок И ТекМаркСписок<>Неопределено Тогда 
            НовыйПараграф = ТекМаркСписок;
        ИначеЕсли ЭтоНумСписок И ТекНумСписок<>Неопределено Тогда 
            НовыйПараграф = ТекНумСписок;
        Иначе 
            НовыйПараграф = ДокументПолучатель.Элементы.Добавить();
            ЗаполнитьЗначенияСвойств(НовыйПараграф, Параграф);
            ТекМаркСписок = ?(ЭтоМаркСписок, НовыйПараграф, Неопределено);
            ТекНумСписок = ?(ЭтоНумСписок, НовыйПараграф, Неопределено);
        КонецЕсли;
        
        Для Каждого ЭлементПараграфа Из Параграф.Элементы Цикл
            Если Тип(ЭлементПараграфа) = Тип("ТекстФорматированногоДокумента") Тогда
                НовыйТекст                                         = НовыйПараграф.Элементы.Добавить(ЭлементПараграфа, Тип("ТекстФорматированногоДокумента"));
                ЗаполнитьЗначенияСвойств(НовыйТекст, ЭлементПараграфа);
                
            ИначеЕсли Тип(ЭлементПараграфа) = Тип("ПереводСтрокиФорматированногоДокумента") Тогда
                НовыйПараграф.Элементы.Добавить(ЭлементПараграфа, Тип("ПереводСтрокиФорматированногоДокумента"));
                
            ИначеЕсли Тип(ЭлементПараграфа) = Тип("КартинкаФорматированногоДокумента") Тогда
                НоваяКартинка = НовыйПараграф.Элементы.Добавить(ЭлементПараграфа, Тип("КартинкаФорматированногоДокумента"));
                ЗаполнитьЗначенияСвойств(НоваяКартинка, ЭлементПараграфа);
            КонецЕсли;
        КонецЦикла;
	КонецЦикла;    
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКартинкуНаКлиенте(СсылкаСтрока)
	
	ХТМЛКодКартинки = ПолучитьХТМЛКодКартинкиНаСервере(СсылкаСтрока);
	
	Если ХТМЛКодКартинки= "" Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДиалогиСтрока",ХТМЛКодКартинки);
	ПараметрыФормы.Вставить("КартинкаДиалога",Истина);
	ОткрытьФорму("Задача.инкЗадачаПользователя.Форма.ФормаДиалогиКЗадаче",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры                                                       

&НаСервере
Функция ПолучитьХТМЛКодКартинкиНаСервере(СсылкаСтрока)
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат ЗадачаОбъект.ПолучитьХТМЛКодКартинки(СсылкаСтрока);
	
КонецФункции

&НаКлиенте
Процедура Отправить(Команда)   
	
	ОтправитьНаСервере(мИДТекущегоСообщения); 
	мИДТекущегоСообщения = "";

КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогКЗадаче(Команда)
	
	СтандартнаяОбработка = Ложь;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыборЗавершение", Новый ОписаниеОповещения("ВложениеВыборЗавершение", ЭтотОбъект));
	Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	ЭтаФорма.Прочитать(); 
	ЭтаФорма.ОбновитьОтображениеДанных();
	ОбновитьДиалогиКЗадаче();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЧасы(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьЧасыЗавершение", ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЧасыПлан", Объект.ЧасыПлан);
	ПараметрыОткрытия.Вставить("ЧасыФакт", Объект.ЧасыФакт);
	
	ОткрытьФорму("Задача.инкЗадачаПользователя.Форма.ФормаУстановкиВремени", 
		ПараметрыОткрытия,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЧасыЗавершение(Знач РезультатРедактирования, Знач ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатРедактирования)Тогда
		
    	Если РезультатРедактирования.КоличествоЧасов <> 0 Тогда
			
			Объект.ЧасыФакт = Объект.ЧасыФакт + РезультатРедактирования.КоличествоЧасов;  
			
			Если ЗначениеЗаполнено(РезультатРедактирования.ВыполненоПоЗадаче) Тогда
				
				КомментарийСтрока = "Выполнено по задаче:"
				                  + Символы.ПС
								  + Символы.ПС
								  +	РезультатРедактирования.ВыполненоПоЗадаче
				                  + Символы.ПС
								  + Символы.ПС
								  + "Затрачено часов: "+РезультатРедактирования.КоличествоЧасов+".";
				
				Если РезультатРедактирования.ОтразитьВДиалоге Тогда
					
					ДобавитьКоментарийКЗадачеНаСервере(КомментарийСтрока);
					
				КонецЕсли;			
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли; 
	
	Записать();
	ОбновитьФорму(Неопределено);
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОтправитьНаСервере(мИДТекущегоСообщения);
	ЭтотОбъект.Записать();
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

#КонецОбласти		  

#Область о // Создание каталога к задаче:

&НаКлиенте
Процедура НачатьПодключениеРасширенияРаботыСФайламиЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Не Подключено Тогда
        Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
        ТекстСообщения = НСтр("ru='Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
        ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет); 
    Иначе
        ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ВыборЗавершение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьУстановкуРасширенияРаботыСФайламиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
        НачатьУстановкуРасширенияРаботыСФайлами(ДополнительныеПараметры.ВыборЗавершение);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВложениеВыборЗавершение(ДополнительныеПараметры, ДопПараметр) Экспорт
	
	ПолучитьИмяКаталога = ПолучитьИмяКаталогаЗадачи();
	Если ПолучитьИмяКаталога = "" Тогда
		Возврат;
	КонецЕсли;
	НачатьСозданиеКаталога(Новый ОписаниеОповещения("КаталогДокументовЗавершение",ЭтотОбъект),ПолучитьИмяКаталога);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогДокументовЗавершение(ИмяКаталогаДокументов, ДополнительныеПараметры) Экспорт 
	
	Сообщить("Создан каталог: "+ИмяКаталогаДокументов);
	ПереместитьСлужебныеФайлыВКаталогПользователя(ИмяКаталогаДокументов);
	
КонецПроцедуры  

&НаКлиенте
Процедура ПереместитьСлужебныеФайлыВКаталогПользователя(ИмяКаталогаДокументов)
	
	ФайлыМассив = ПолучитьФайлыЗадачиНаСервере(); 
	
	Если ФайлыМассив.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;
	ПараметрыДиалога.ВыборКаталога = Ложь;
	ПараметрыДиалога.Каталог = ИмяКаталогаДокументов;
	
	Для каждого ФайлЭлемент Из ФайлыМассив Цикл
		НачатьПолучениеФайлаССервера(ФайлЭлемент.АдресФайла, ФайлЭлемент.ИмяФайла, ПараметрыДиалога);
	КонецЦикла;
	
КонецПроцедуры                                  

&НаСервере
Функция ПолучитьФайлыЗадачиНаСервере()	
	
	ФайлыЗадачиМассив = Новый Массив;
	
	Если Константы.инкПолучатьФайлыКЗадачеПриСозданииКаталога.Получить() Тогда
		ДобавитьФайлОписаниеЗадачи(ФайлыЗадачиМассив);
		ДобавитьФайлыПрикрепленныеЗадаче(ФайлыЗадачиМассив);
	КонецЕсли;
	
	Возврат ФайлыЗадачиМассив;	
	
КонецФункции  

&НаСервере
Процедура  ДобавитьФайлыПрикрепленныеЗадаче(ФайлыЗадачиМассив)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкЗадачаПользователяПрисоединенныеФайлы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.инкЗадачаПользователяПрисоединенныеФайлы КАК инкЗадачаПользователяПрисоединенныеФайлы
		|ГДЕ
		|	инкЗадачаПользователяПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
		|	И НЕ инкЗадачаПользователяПрисоединенныеФайлы.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(ВыборкаДетальныеЗаписи.Ссылка, Неопределено);

		ФайлСтруктура = ПолучитьСтруктураФайлаНаСервере(); 
		ФайлСтруктура.ИмяФайла = ДанныеФайла.Наименование
		                       + "."
							   + ДанныеФайла.Расширение;
		ФайлСтруктура.АдресФайла = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
		                                 
		ФайлыЗадачиМассив.Добавить(ФайлСтруктура);
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьСтруктураФайлаНаСервере()

	ФайлСтруктура = Новый Структура;
	ФайлСтруктура.Вставить("ИмяФайла");
	ФайлСтруктура.Вставить("АдресФайла");
	
	Возврат ФайлСтруктура; 
	
КонецФункции

&НаСервере
Процедура  ДобавитьФайлОписаниеЗадачи(ФайлыЗадачиМассив)
	
	ФайлСтруктура = ПолучитьСтруктураФайлаНаСервере();

	ФайлСтруктура.ИмяФайла = "ОписаниеКЗадаче - "+Объект.Номер+".txt";
	
	ВремКаталог =  КаталогВременныхФайлов();
    ПутьКФайлу = ВремКаталог + ФайлСтруктура.ИмяФайла;
	
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	ТекстовыйФайл.ВставитьСтроку(1,Объект.Наименование);
	ТекстовыйФайл.ВставитьСтроку(2,"");
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	ИндексСтроки = 3;
	Для каждого ДиалогСтрока Из ЗадачаОбъект.ДиалогиКЗадачеТаблица Цикл
		
		ТекстСообщения = ДиалогСтрока.СообщениеДиалога.Получить().ПолучитьТекст();
		ТекстовыйФайл.ВставитьСтроку(ИндексСтроки,ТекстСообщения);
		ТекстовыйФайл.ВставитьСтроку(ИндексСтроки+1,"");
		
		ИндексСтроки = ИндексСтроки + 2;
		
	КонецЦикла;
	
	ТекстовыйФайл.Записать(ПутьКФайлу); 
	
	ДвоичныйФайл = Новый ДвоичныеДанные(ПутьКФайлу);

	ФайлСтруктура.АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныйФайл);

	ФайлыЗадачиМассив.Добавить(ФайлСтруктура);

КонецПроцедуры

#КонецОбласти

#Область о // Дополнительные процедуры и функции:

&НаКлиенте
Процедура ОчиститьОформление(Команда)
	
	ЦветТекста = Новый Цвет;
	ЦветФона = Новый Цвет;
	Шрифт = Новый Шрифт(,13,Ложь,Ложь,Ложь,Ложь,100);
	
	Для каждого ПараграфКомментария Из мКомментарийКЗадаче.Элементы Цикл
		
		Если ПараграфКомментария.ТипПараграфа = ТипПараграфа.Обычный Тогда
			
			Для каждого ЭлементПараграфа Из ПараграфКомментария.Элементы Цикл
				
				Если ТипЗнч(ЭлементПараграфа) = Тип("ТекстФорматированногоДокумента") Тогда
					ЭлементПараграфа.ЦветТекста = ЦветТекста;
					ЭлементПараграфа.ЦветФона 	= ЦветФона;
					ЭлементПараграфа.Шрифт 		= Шрифт;
				КонецЕсли;
				
			КонецЦикла;	
			
		Иначе 
	 		Продолжить;
	 	КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКоментарийКЗадачеНаСервере(КомментарийСтрока)

	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	ЗадачаОбъект.ДобавитьКомментарийКЗадаче(КомментарийСтрока);
	ЗадачаОбъект.Записать();
	ЗначениеВРеквизитФормы(ЗадачаОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Процедура УстановкаРеквизитовНаФорме()
	
	Элементы.ЧасыПлан.Доступность = Ложь;
	Элементы.ЧасыФакт.Доступность = Ложь;
	
	Если Объект.ЧасыПлан = 0 Тогда
		Элементы.ЧасыПлан.Доступность = Истина;	
	КонецЕсли;            
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяКаталогаЗадачи()

	ИмяКаталога = "";
	ТекущийПользователь = Пользователи.ТекущийПользователь(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкПутиККаталогамЗадач.ПроектКЗадаче КАК ПроектКЗадаче,
		|	инкПутиККаталогамЗадач.Пользователь КАК Пользователь,
		|	инкПутиККаталогамЗадач.Каталог КАК Каталог
		|ИЗ
		|	РегистрСведений.инкПутиККаталогамЗадач КАК инкПутиККаталогамЗадач
		|ГДЕ
		|	инкПутиККаталогамЗадач.ПроектКЗадаче = &ПроектКЗадаче
		|	И инкПутиККаталогамЗадач.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	Запрос.УстановитьПараметр("ПроектКЗадаче", Объект.Проект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ИмяКаталога = ВыборкаДетальныеЗаписи.Каталог;	
	КонецЦикла;
	НаименованиеЗадачи = ОбработатьНаименованиеЗадачи(Объект.Наименование);
	
	Если ЗначениеЗаполнено(ИмяКаталога) Тогда
		ИмяКаталога = ИмяКаталога 
					+ "\здч" + СокрЛП(Объект.Номер)
					+ " - " 
					+ НаименованиеЗадачи;
	Иначе
		Сообщить("У пользователя "+ТекущийПользователь+" не задан корневой каталог с задачами. См. регистр сведений ""Пути к каталогам задач (Инкомсофт)""");
	КонецЕсли;
	
	Возврат ИмяКаталога;
	
КонецФункции   

&НаСервере
Функция ОбработатьНаименованиеЗадачи(НаименованиеСтрока)
	
	НовоеНаименование = НаименованиеСтрока;
	НовоеНаименование = СтрЗаменить(НовоеНаименование,":"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,"<"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,">"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,""""," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,"/"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,"\"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,"|"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,"?"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,"*"," ");
	НовоеНаименование = СтрЗаменить(НовоеНаименование,".","");
	
	НовоеНаименование = СокрЛП(НовоеНаименование);
	
	Возврат НовоеНаименование;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНачальнымиДанными(Параметры)

	Если инкОбщийКлиентСервер.ЕстьСвойство(Параметры,"Проект") Тогда
		Объект.Проект = Параметры.Проект;
	КонецЕсли;

	Если инкОбщийКлиентСервер.ЕстьСвойство(Параметры,"Исполнитель") Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Исполнитель) Тогда
			Объект.Исполнитель = Параметры.Исполнитель;	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиСсылкуОбъекта(Элемент)  
	
	Попытка
		
		Врем = Элемент;
	    Пока Врем <> Неопределено Цикл
	        Если НРег(Врем.tagName) = "a" Тогда
	            Возврат Врем;
	        КонецЕсли;
	        Врем = Врем.parentElement;
	    КонецЦикла;
		
	Исключение
		Возврат Неопределено;
		//ОписаниеОшибки()
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ОтправитьНаСервере(ИДСообщения = "")
	
	Если ИДСообщения = "" Тогда
		ЗаписатьНовоеСообщение(мКомментарийКЗадаче);
	Иначе
		РедактироватьТекущееСообщение(ИДСообщения,мКомментарийКЗадаче);
	КонецЕсли;
	
	мКомментарийКЗадаче = "";   
	ОбновитьДиалогиКЗадаче();
	
КонецПроцедуры 

#КонецОбласти

#Область о // Редактирование сообщения:

&НаСервере
Процедура РедактироватьТекущееСообщение(ИДСообщения,ТекстСообщения)
	
	Если ИДСообщения = "" Тогда
		Возврат;
	КонецЕсли;  
	
	ПоискСообщения = Новый Структура("ИДСообщения",ИДСообщения);
	
	ЗадачаОбъект = ПолучитьЗначениеРеквизитаФормы();
	
	ДиалогСтроки = ЗадачаОбъект.ДиалогиКЗадачеТаблица.НайтиСтроки(ПоискСообщения);
	Для каждого ДиалогСтрока Из ДиалогСтроки Цикл
		ДиалогСтрока.СообщениеДиалога = Новый ХранилищеЗначения(мКомментарийКЗадаче, Новый СжатиеДанных(9));
	КонецЦикла;
	
	ЗадачаОбъект.Записать();
	
	ЗначениеВРеквизитФормы(ЗадачаОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСообщение(ИДСообщения)
	
	Если НЕ ЗначениеЗаполнено(ИДСообщения) Тогда
		Возврат;
	КонецЕсли;
	
	ПоискСообщения = Новый Структура("ИДСообщения",ИДСообщения);
	
	ДиалогСтроки = Объект.ДиалогиКЗадачеТаблица.НайтиСтроки(ПоискСообщения);
	Для каждого ДиалогСтрока Из ДиалогСтроки Цикл
		Объект.ДиалогиКЗадачеТаблица.Удалить(ДиалогСтрока);
	КонецЦикла;
	
	ИДСообщения = "";
	
	ОбновитьДиалогиКЗадаче();

КонецПроцедуры

&НаСервере
Процедура ЗаписатьНовоеСообщение(КомментарийКЗадаче)
	
	Если КомментарийКЗадаче.Элементы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;    
	
	ЗадачаОбъект = ПолучитьЗначениеРеквизитаФормы();
	
	ДиалогКЗадачеСтрока = ЗадачаОбъект.ДиалогиКЗадачеТаблица.Добавить();
	ДиалогКЗадачеСтрока.Дата		= ТекущаяДата();	
	ДиалогКЗадачеСтрока.Автор       = Пользователи.ТекущийПользователь();
	ДиалогКЗадачеСтрока.СообщениеДиалога = Новый ХранилищеЗначения(КомментарийКЗадаче, Новый СжатиеДанных(9));
	ДиалогКЗадачеСтрока.ИДСообщения = Новый УникальныйИдентификатор;
	
	ЗадачаОбъект.Записать();
	
	ЗначениеВРеквизитФормы(ЗадачаОбъект,"Объект");
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьЗначениеРеквизитаФормы()
	
	Попытка
		ЗначениеРеквизита = РеквизитФормыВЗначение("Объект");	
	Исключение
		ЗначениеРеквизита = Неопределено;
		Сообщить("Не удалось записать данные в форму! Возможно требуется ее обновление. Для этого нажмите кнопку ""Обновить"".");
		ВызватьИсключение;		
	КонецПопытки;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции


&НаСервере
Функция ОбработатьСтрокуДляЗаписи(ТекстСообщения)
	
	СтрокаДляЗаписи = "";
	
	Если СтрЧислоСтрок(ТекстСообщения) = 1 Тогда
		СтрокаДляЗаписи = ТекстСообщения;
	Иначе                            
		
		Для Индекс=1 по СтрЧислоСтрок(ТекстСообщения) - 1 Цикл
			
			СтрокаДляЗаписи = СтрокаДляЗаписи 
			                + СтрПолучитьСтроку(ТекстСообщения,Индекс)
							+ "<br />";
							
		КонецЦикла; 		
		
		СтрокаДляЗаписи = СтрокаДляЗаписи 
			            + СтрПолучитьСтроку(ТекстСообщения,Индекс);
							
	КонецЕсли;
	
	Возврат СтрокаДляЗаписи; 
	
КонецФункции

#КонецОбласти

#Область о // Загрузка диалога к задаче:

&НаСервере
Процедура ОбновитьДиалогиКЗадаче()
	
	мДиалогиКЗадаче = ПолучитьДиалогиКЗадаче();
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьДиалогиКЗадаче()
	
	ДиалогиСтрока = "";

	Если Объект.ДиалогиКЗадачеТаблица.Количество() > 0 Тогда
		
		ДиалогиСтрока = ПолучитьЗаголовок();
		ДиалогиСтрока = ДиалогиСтрока + ПолучитьСообщения();
		ДиалогиСтрока = ДиалогиСтрока + ПолучитьПодвал();
		
	КонецЕсли;

	Возврат ДиалогиСтрока;
	
КонецФункции   

&НаСервере
Функция ПолучитьСообщения()
	
	СообщенияСтрока = "";          
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	
	ИндексДиалога = ЗадачаОбъект.ДиалогиКЗадачеТаблица.Количество() - 1;
	Пока ИндексДиалога >= 0 Цикл
		
		ДиалогЗадачиСтрока = ЗадачаОбъект.ДиалогиКЗадачеТаблица[ИндексДиалога];
		
		ТекстHTML = ПолучитьТекстHTMLИзДиалога(ДиалогЗадачиСтрока);
		 
 		СообщенияСтрока = СообщенияСтрока +		
		
		 "
	     |<div class=""text-block""> 
	     |<div class=""message-top"">  
	     |<table class=""text"">
	     |<tbody>
	     |<tr>
	     |<td>"
		 + ДиалогЗадачиСтрока.Автор + " " 
		 + " ["
		 + ДиалогЗадачиСтрока.Дата
		 + " ]:"
		 +"
		 |</td>
	     |<td class=""rightcol"">"
		 +             
		 "<A style=""color:black;"" id=""" + ДиалогЗадачиСтрока.ИДСообщения + "[Комментировать]" + """ href= """
	     + "Комментировать" + """ >"+"[Комментировать]"+"</A> "	 	 
		 +             
		 "<A style=""color:black;"" id=""" + ДиалогЗадачиСтрока.ИДСообщения + "[Редактировать]" + """ href= """
	     + "Редактировать" + """ >"+"[Редактировать]"+"</A> "	 	 
		 +             
		 "<A style=""color:black;"" id=""" + ДиалогЗадачиСтрока.ИДСообщения + "[Удалить]" + """ href= """
	     + "Удалить" + """ >"+"[Удалить]"+"</A>"	 	 
		 +"
	     |</td>
	     |   </tr></tbody></table></div>
	     |<div class=""message-text"">  
	     |<table>
	     |<tbody>
	     |<tr>
	     |<td>"
		 +
		 //ДиалогЗадачиСтрока.Сообщение
		 ТекстHTML
		 +"  
		 |</td>
		 |   </tr></tbody></table></div></div>";		
		 
		 ИндексДиалога = ИндексДиалога - 1; 
		 
	КонецЦикла;
		
	Возврат СообщенияСтрока;
	
КонецФункции  

&НаСервере
Функция ПолучитьТекстHTMLИзДиалога(ДиалогЗадачиСтрока)

	ТекстHTML = "";  
	ИтоговаяСтрокаХТМЛ = "";
	Вложения = Новый Структура;
	ФорматированныйТекст = ДиалогЗадачиСтрока.СообщениеДиалога.Получить();
	
	Если ФорматированныйТекст <> Неопределено Тогда
		
		ФорматированныйТекст.ПолучитьHTML(ТекстHTML, Вложения);
		
		ОбработатьКомментарииВТексте(ТекстHTML);  
		
		Если Вложения.Количество() > 0 Тогда
			
			ИтоговаяСтрокаХТМЛ = "";
			КоличествоСтрокХТМЛ = СтрЧислоСтрок(ТекстHTML);	
			Для ИндексСтроки = 1 По КоличествоСтрокХТМЛ Цикл
				
				СтрокаХТМЛ = СтрПолучитьСтроку(ТекстHTML, ИндексСтроки);
				
				Если СтрНайти(СтрокаХТМЛ,"img") > 0 Тогда
					
					Для каждого ВложениеКартинка Из Вложения Цикл
						
						Если СтрНайти(СтрокаХТМЛ,ВложениеКартинка.Ключ) > 0 Тогда
							
							// Удаление пустых ссылок:
							СтрокаХТМЛ = СтрЗаменить(СтрокаХТМЛ,"<a href="""">","");
							СтрокаХТМЛ = СтрЗаменить(СтрокаХТМЛ,"</a>","");
							
							// Подмена ключа на двоичные данные:	
							СтрокаХТМЛ 	= СтрЗаменить(СтрокаХТМЛ, " src=""" 
										+ ВложениеКартинка.Ключ 
										+ "", " src=""data:image/png;base64, " 
										+ Base64Строка(ВложениеКартинка.Значение.ПолучитьДвоичныеДанные()) + """" 
										);                
							ИДСсылки = "НомерСтроки="
							         + ДиалогЗадачиСтрока.НомерСтроки
									 + ";"
									 + "Картинка="
									 + ВложениеКартинка.Ключ
									 + ";";
									 
							// Делаем из картинки ссылку с ключем:
						    СтрокаХТМЛ 	= "<A id="""+ИДСсылки+""" href="""""
							            + СтрокаХТМЛ
										+ "</A>"
										;
										
							Прервать;										
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				ИтоговаяСтрокаХТМЛ = ИтоговаяСтрокаХТМЛ 
				                   + СтрокаХТМЛ
								   + Символы.ПС;
				
			КонецЦикла;
			
			ТекстHTML = ИтоговаяСтрокаХТМЛ;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстHTML;

КонецФункции  

&НаСервере
Процедура ОбработатьКомментарииВТексте(ТекстHTML)

	НачалоБлокаТекст =  "<div class=""text-block""> 
                        |<div class=""message-komment"">  
                        |<table>
                        |<tbody>
                        |<tr>
                        |<td>";
	
	КонецБлокаТекст = "</td>
                       |   </tr></tbody></table></div></div>";
	
	ТекстHTML = СтрЗаменить(ТекстHTML,"[*]",НачалоБлокаТекст);
	ТекстHTML = СтрЗаменить(ТекстHTML,"[/*]",КонецБлокаТекст);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаголовок()
	
	ЗаголовокСтрока = 	
	
	 "<html><head>
     |<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""><link rel=""stylesheet"" type=""text/css"" href=""__STYLE__"">
     |<style type="""" text="""">
     |    
     | img { 
     |		width: 10%;
	 |      height: 10%;
     |       	}  
     |	
     | .message-top {
     |		background: #ddf4ff; color:#000; font:10px ""Times New Roman""; padding:5px 5px;
     |		border-radius: 10px 10px 0 0;
     |		-moz-border-radius: 10px 10px 0 0;
     |		-webkit-border-radius: 10px 10px 0 0;
     |		-khtml-border-radius: 10px 10px 0 0;      
     |		border: 1px solid #DDD;
     |		
     |	}     
     |	
     |.message-text { 
     |		padding:5px 5px;
     |		background: #F6F8FA; color:#000; font:10px  ""Century Gothic""; font-size: 10;
     |		border-radius: 0px 0px 10px 10px;    
     |		border: 1px solid #DDD;
     |       	}  
	 |
	 |.message-komment { 
	 |	padding:5px 5px;
	 |	background: #d3dde7; color:#000; font:10px  ""Century Gothic""; 
	 |	border-radius: 10px 10px 10px 10px;    
	 |	border: 1px solid #DDD;
     |  		}  
	 |
     |table.text  {
     |    width:  100%; /* Ширина таблицы */
     |    border-spacing: 0; /* Расстояние между ячейками */
     |   }
     |   table.text td {
     |    width: 50%; /* Ширина ячеек */
     |    vertical-align: top; /* Выравнивание по верхнему краю */
     |   }
     |   td.rightcol { /* Правая ячейка */ 
     |    text-align: right; /* Выравнивание по правому краю */
     |   }	
     |	       
     |.text-block {
     |padding: 10px 20px 10px 10px;   
     |}   
     |}
     |</style><base href=""v8config://ad77bc2e-0e0f-4a50-9d8b-2e833d8d97b2/mdobject/id13c8647d-dd24-4855-ad95-e840a9797615/8eb4fad1-1fa6-403e-970f-2c12dbb43e23""></head>
     |<body>";
	
	Возврат ЗаголовокСтрока;
	
КонецФункции

&НаСервере
Функция ПолучитьПодвал()
	
	ЗаголовокСтрока = "   </body></html>";

	Возврат ЗаголовокСтрока;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьДиалогиКЗадаче(Команда)
	
	ДиалогиСтрока = ПолучитьДиалогиКЗадаче();
	
	Если ДиалогиСтрока = "" Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДиалогиСтрока",ДиалогиСтрока);
	ПараметрыФормы.Вставить("Ключ",Объект.Ссылка);
	ОткрытьФорму("Задача.инкЗадачаПользователя.Форма.ФормаДиалогиКЗадаче",ПараметрыФормы,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти
