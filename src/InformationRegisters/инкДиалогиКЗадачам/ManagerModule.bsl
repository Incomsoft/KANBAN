
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Функция - Получить файлы к сообщениям в задаче
//
// Параметры:
//  ЗадачаПользователя	 - Ссылка	 - Задача пользователя 
//	ИДСообщения 		 - Строка	 - УИД сообщения	
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица со списком файлов
//
Функция ПолучитьФайлыТаблица(ЗадачаПользователя,ИДСообщения = Неопределено) Экспорт
	
	ФайлыТаблица = Новый ТаблицаЗначений;
	
	Если НЕ ЗначениеЗаполнено(ЗадачаПользователя) Тогда
		Возврат ФайлыТаблица;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкЗадачаПользователяПрисоединенныеФайлы.Наименование КАК Наименование,
		|	инкЗадачаПользователяПрисоединенныеФайлы.Ссылка КАК Ссылка,
		|	инкЗадачаПользователяПрисоединенныеФайлы.ИДСообщения КАК ИДСообщения,
		|	инкЗадачаПользователяПрисоединенныеФайлы.Расширение КАК Расширение
		|ИЗ
		|	Справочник.инкЗадачаПользователяПрисоединенныеФайлы КАК инкЗадачаПользователяПрисоединенныеФайлы
		|ГДЕ
		|	НЕ инкЗадачаПользователяПрисоединенныеФайлы.ПометкаУдаления
		|	И инкЗадачаПользователяПрисоединенныеФайлы.ИДСообщения = &ИДСообщения
		|	И инкЗадачаПользователяПрисоединенныеФайлы.ИДСообщения <> """"
		|	И инкЗадачаПользователяПрисоединенныеФайлы.ВладелецФайла = &ЗадачаПользователя";

	Запрос.УстановитьПараметр("ЗадачаПользователя", ЗадачаПользователя);
	Если ИДСообщения = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"инкЗадачаПользователяПрисоединенныеФайлы.ИДСообщения = &ИДСообщения","Истина");	
	Иначе
		Запрос.УстановитьПараметр("ИДСообщения", ИДСообщения);	
	КонецЕсли;
	
	ФайлыТаблица = Запрос.Выполнить().Выгрузить();
	
	Возврат ФайлыТаблица;
	
КонецФункции

// Функция - Получить диалоги к задаче таблица
//
// Параметры:
//  ЗадачаПользователя	 - Ссылка	 - Задача пользователя 
//	ИДСообщения 		 - Строка	 - УИД сообщения	
//  РассылкаВыполнена    - Булево	 - Признак отбора по выполненной рассылке
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица со списком диалогов
//
Функция ПолучитьДиалогиКЗадачеТаблица(ЗадачаПользователя,ИДСообщения = Неопределено,РассылкаВыполнена = Неопределено) Экспорт
	
	ДиалогиКЗадаче = Новый ТаблицаЗначений;
	
	Если НЕ ЗначениеЗаполнено(ЗадачаПользователя) Тогда
		Возврат ДиалогиКЗадаче;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	инкДиалогиКЗадачам.ЗадачаПользователя КАК ЗадачаПользователя,
		|	инкДиалогиКЗадачам.ИДСообщениеРодителя КАК ИДСообщениеРодителя,
		|	инкДиалогиКЗадачам.ИДСообщения КАК ИДСообщения,
		|	инкДиалогиКЗадачам.Проект КАК Проект,
		|	инкДиалогиКЗадачам.Автор КАК Автор,
		|	инкДиалогиКЗадачам.Дата КАК Дата,
		|	инкДиалогиКЗадачам.РассылкаВыполнена КАК РассылкаВыполнена,
		|	инкДиалогиКЗадачам.СообщениеДиалога КАК СообщениеДиалога
		|ИЗ
		|	РегистрСведений.инкДиалогиКЗадачам КАК инкДиалогиКЗадачам
		|ГДЕ
		|	инкДиалогиКЗадачам.ЗадачаПользователя = &ЗадачаПользователя
		|	И инкДиалогиКЗадачам.ИДСообщения = &ИДСообщения
		|	И инкДиалогиКЗадачам.РассылкаВыполнена = &РассылкаВыполнена
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("ЗадачаПользователя", ЗадачаПользователя);
	
	Если ИДСообщения = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"инкДиалогиКЗадачам.ИДСообщения = &ИДСообщения","Истина");
	Иначе	
		Запрос.УстановитьПараметр("ИДСообщения", ИДСообщения);
	КонецЕсли;

	Если РассылкаВыполнена = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"инкДиалогиКЗадачам.РассылкаВыполнена = &РассылкаВыполнена","Истина");
	Иначе	
		Запрос.УстановитьПараметр("РассылкаВыполнена", РассылкаВыполнена);
	КонецЕсли;

	ДиалогиКЗадаче = Запрос.Выполнить().Выгрузить();
	
	Возврат ДиалогиКЗадаче;
	
КонецФункции

// Процедура - Удаление диалогов
//
// Параметры:
//  ЗадачаПользователя	 - Ссылка	 - Задача пользователя        
//	ИДСообщения 		 - Строка	 - УИД сообщения	
//
Процедура УдалениеДиалогов(ЗадачаПользователя,ИДСообщения = Неопределено, Отказ = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЗадачаПользователя) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИДСообщения) Тогда
		
		НаборЗаписейДети = РегистрыСведений.инкДиалогиКЗадачам.СоздатьНаборЗаписей();
		НаборЗаписейДети.Отбор.ЗадачаПользователя.Установить(ЗадачаПользователя);
		НаборЗаписейДети.Отбор.ИДСообщениеРодителя.Установить(ИДСообщения);
		НаборЗаписейДети.Прочитать();
	    Для каждого ЗаписьДети Из НаборЗаписейДети Цикл
			УдалениеДиалогов(ЗадачаПользователя,ЗаписьДети.ИДСообщения, Отказ);	
		КонецЦикла;

		УдалитьФайлыКЗадачеПоИД(ИДСообщения,Отказ);

	КонецЕсли;	
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.инкДиалогиКЗадачам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗадачаПользователя.Установить(ЗадачаПользователя);
	Если ИДСообщения <> Неопределено Тогда
		НаборЗаписей.Отбор.ИДСообщения.Установить(ИДСообщения);
	КонецЕсли;
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры                      

Процедура УдалитьФайлыКЗадачеПоИД(ИДСообщения,Отказ)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкЗадачаПользователяПрисоединенныеФайлы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.инкЗадачаПользователяПрисоединенныеФайлы КАК инкЗадачаПользователяПрисоединенныеФайлы
		|ГДЕ
		|	инкЗадачаПользователяПрисоединенныеФайлы.ИДСообщения = &ИДСообщения";
	
	Запрос.УстановитьПараметр("ИДСообщения", ИДСообщения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Попытка
			ФайлОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ФайлОбъект.Удалить();
		Исключение          
			Отказ = Истина;
			инкОбщийКлиентСервер.СообщитьПользователю("Ошибка при удалении файла. Описание: "
			                                         +ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;    
		
КонецПроцедуры

// Процедура - Маркировка диалогов по выполненной рассылке:
//
// Параметры:
//  ДиалогиКОтправкеТаблица	 - ТаблицаЗначений	 - Таблица с диалогами по которым выполнена рассылка
//
Процедура РассылкаВыполнена(ДиалогиКОтправкеТаблица) Экспорт
	
	Для каждого ДиалогСтрока Из ДиалогиКОтправкеТаблица Цикл
		
		МенеджерЗаписи = РегистрыСведений.инкДиалогиКЗадачам.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи,ДиалогСтрока);
		МенеджерЗаписи.РассылкаВыполнена = Истина;
		МенеджерЗаписи.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти

#КонецЕсли


