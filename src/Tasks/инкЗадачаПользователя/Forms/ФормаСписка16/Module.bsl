	  
#Область о // Стандартные процедуры и функции:

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)        
	
	Проект = Справочники.инкПроектыКЗадачам.ПолучитьПервыйПроект();  
	Исполнитель = Пользователи.ТекущийПользователь(); 
	
КонецПроцедуры              

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьОтборВСписках();

КонецПроцедуры   

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	УстановитьОтборВСписках();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКВыполнениюПаузаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбновитьСтатусЗадачНаКлиенте("КВыполнениюПауза",ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВРаботеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбновитьСтатусЗадачНаКлиенте("ВРаботе",ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТестированиеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбновитьСтатусЗадачНаКлиенте("Тестирование",ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗавершеноПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ОбновитьСтатусЗадачНаКлиенте("Завершено",ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры                  

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	УстановитьОтборВСписках();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКВыполнениюПаузаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОткрытьЗадачуПользователя(Элемент.ТекущаяСтрока,СтандартнаяОбработка);
	
КонецПроцедуры   

&НаКлиенте
Процедура СписокВРаботеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОткрытьЗадачуПользователя(Элемент.ТекущаяСтрока,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТестированиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОткрытьЗадачуПользователя(Элемент.ТекущаяСтрока,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗавершеноВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ОткрытьЗадачуПользователя(Элемент.ТекущаяСтрока,СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачу(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Проект",Проект);
	ПараметрыФормы.Вставить("Исполнитель",Исполнитель);
	
	ОткрытьФорму("Задача.инкЗадачаПользователя.Форма.ФормаЗадачи",ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройкиФормы(Команда)
	
	СброситьНастройкиФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СброситьНастройкиФормыНаСервере()
	
	//ХранилищеСистемныхНастроек.Удалить("Обработка.инкДоскаЗадачПользователей.Форма.Форма/НастройкиФормы",, ИмяПользователя());
	
КонецПроцедуры 	

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.инкЗадачаПользователя"));
КонецПроцедуры

#КонецОбласти	  
	  
#Область о // Дополнительные процедуры и функции: 

&НаКлиенте
Процедура УстановитьОтборВСписках()

	УстановитьОтоборПоПроектуВСпике("СписокКВыполнениюПауза",Проект);
	УстановитьОтоборПоПроектуВСпике("СписокВРаботе",Проект);
	УстановитьОтоборПоПроектуВСпике("СписокТестирование",Проект);
	УстановитьОтоборПоПроектуВСпике("СписокЗавершено",Проект);
	//
	УстановитьОтоборПоИсполнителюВСпике("СписокКВыполнениюПауза",Исполнитель);
	УстановитьОтоборПоИсполнителюВСпике("СписокВРаботе",Исполнитель);
	УстановитьОтоборПоИсполнителюВСпике("СписокТестирование",Исполнитель);
	УстановитьОтоборПоИсполнителюВСпике("СписокЗавершено",Исполнитель);
	//          

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтоборПоПроектуВСпике(ИмяСписка,ПроектСсылка)
                            
	ПользовательскийОтбор = ЭтотОбъект[ИмяСписка].КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭтотОбъект[ИмяСписка].КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных("Проект");
	
	ЭлементОтбораПользовательский = Неопределено;
	Для каждого ЭлементОтбора Из ПользовательскийОтбор.Элементы Цикл
		
		Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементОтбораПользовательский = ЭлементОтбора; 		
		КонецЕсли;
		
	КонецЦикла;                              
	
	Если ЭлементОтбораПользовательский = Неопределено Тогда
		ЭлементОтбораПользовательский =  ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораПользовательский.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор();
	
	КонецЕсли;
	
	ЭлементОтбораПользовательский.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПользовательский.ЛевоеЗначение = ПолеКомпоновки;
	ЭлементОтбораПользовательский.ПравоеЗначение = ПроектСсылка;
	ЭлементОтбораПользовательский.Использование = Истина;                            
	ЭлементОтбораПользовательский.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтоборПоИсполнителюВСпике(ИмяСписка,ИсполнительСсылка)
                            
	ПользовательскийОтбор = ЭтотОбъект[ИмяСписка].КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭтотОбъект[ИмяСписка].КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных("Исполнитель");
	
	ЭлементОтбораПользовательский = Неопределено;
	Для каждого ЭлементОтбора Из ПользовательскийОтбор.Элементы Цикл
		
		Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементОтбораПользовательский = ЭлементОтбора; 		
		КонецЕсли;
		
	КонецЦикла;                              
	
	Если ЭлементОтбораПользовательский = Неопределено Тогда
		ЭлементОтбораПользовательский =  ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораПользовательский.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор();
	
	КонецЕсли;
	
	ЭлементОтбораПользовательский.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПользовательский.ЛевоеЗначение = ПолеКомпоновки;
	ЭлементОтбораПользовательский.ПравоеЗначение = ИсполнительСсылка;
	ЭлементОтбораПользовательский.Использование = ЗначениеЗаполнено(ИсполнительСсылка);                            
	ЭлементОтбораПользовательский.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусЗадачНаКлиенте(СтатусСтрока,МассивЗадач)

	ОбновитьСтатусЗадачНаСервере(СтатусСтрока,МассивЗадач);
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.инкЗадачаПользователя"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьСтатусЗадачНаСервере(СтатусСтрока,МассивЗадач)
	
	Если ТипЗнч(МассивЗадач) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;  
	
	Для каждого ЗадачаСсылка Из МассивЗадач Цикл
		
		УстанановитьСтатус = Перечисления.инкСтатусыЗадач[СтатусСтрока];
		Если ЗадачаСсылка.Статус = УстанановитьСтатус Тогда
			Прервать;
		КонецЕсли;
		
		Попытка
			ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект();
			ЗадачаОбъект.Статус = УстанановитьСтатус;
			ЗадачаОбъект.Выполнена = (ЗадачаОбъект.Статус = Перечисления.инкСтатусыЗадач.Завершено);
			ЗадачаОбъект.Записать();
		Исключение
		    инкОбщийКлиентСервер.СообщитьПользователю("Ошибка при записи задачи. Описание: " + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗадачуПользователя(ЗадачаСсылка,СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", ЗадачаСсылка);
    ОткрытьФорму("Задача.инкЗадачаПользователя.Форма.ФормаЗадачи", ПараметрыФормы,,Новый УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти	  
